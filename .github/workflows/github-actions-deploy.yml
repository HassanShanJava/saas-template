# GitHub Action Testing for git commands through AWS SSM2
name: build-fitnfi-staging # Descriptive name for the workflow

on:
  push:
    branches:
      - main # Trigger workflow on pushes to the 'dev' branch

jobs:
  build-dev:
    runs-on: ubuntu-latest # Use a suitable GitHub-hosted runner
    env:
      VITE_APP_SITEKEY: ${{env.VITE_APP_SITEKEY}}
      VITE_API_URL: ${{env.VITE_API_URL}}
      VITE_View_URL: ${{env.VITE_View_URL}}
      VITE_AWS_S3_BUCKET_NAME: ${{env.VITE_AWS_S3_BUCKET_NAME}}
      VITE_AWS_S3_REGION: ${{env.VITE_AWS_S3_REGION}}

    steps:
      - uses: pnpm/action-setup@v4
        with:
          version: 7.30.0
      - uses: actions/checkout@v4 # Checkout the repository
      - uses: actions/cache@v3 # Cache dependencies for faster builds
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - run: echo '${{ secrets.ENV_FILE }}' | base64 -d > .env # Create .env file from secret
      - run: pnpm install # Install dependencies
      - run: pnpm run build # Build the Next.js app
      - run: aws s3 cp ${{ github.workspace }}/dist/ s3://atmosphere.fitnfi.com/ --recursive
      - id: create_invalidation
        run: |
          invalidation_id=$(aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_DISTRIBUTION_ID }} --paths "/*"  --output text --query 'Invalidation.Id')
          echo "Invalidation ID: $invalidation_id"
      
