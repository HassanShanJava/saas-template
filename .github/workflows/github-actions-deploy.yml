# GitHub Action Testing for git commands through AWS SSM2
name: build-deploy-staging # Descriptive name for the workflow

on:
  push:
    branches:
      - main # Trigger workflow on pushes to the 'dev' branch

jobs:
  build-dev:
    runs-on: ubuntu-latest # Use a suitable GitHub-hosted runner
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} # Access secrets securely
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      INSTANCE_ID: ${{ secrets.INSTANCE_ID }}

    steps:
      - uses: pnpm/action-setup@v4
        with:
          version: 7.30.0
      - uses: actions/checkout@v4 # Checkout the repository
      - uses: actions/cache@v3 # Cache dependencies for faster builds
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - run: echo '${{ secrets.ENV_FILE }}' | base64 -d > .env # Create .env file from secret
      - run: pnpm install # Install dependencies
      - run: pnpm run build # Build the Next.js app
      - run: aws s3 cp ${{ github.workspace }}/.next/ s3://media.dirtx.io/tmp/.next/ --recursive

  deploy-dev:
    needs: build-dev # Ensure dependency on the build job
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} # Access secrets securely
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      INSTANCE_ID: ${{ secrets.INSTANCE_ID }}

    steps:
      - uses: actions/checkout@v4
      - run: aws ssm send-command --document-name "AWS-RunShellScript" --region="$AWS_REGION" --targets "Key=instanceids,Values=${{ secrets.INSTANCE_ID }}" --cli-input-json file://main-deploy.json --debug # Run deployment script